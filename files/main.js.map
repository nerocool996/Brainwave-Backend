{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/service/http.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./history/history.module\": [\n\t\t\"./src/app/history/history.module.ts\",\n\t\t\"history-history-module~stocks-stocks-module\",\n\t\t\"history-history-module\"\n\t],\n\t\"./stocks/stocks.module\": [\n\t\t\"./src/app/stocks/stocks.module.ts\",\n\t\t\"history-history-module~stocks-stocks-module\",\n\t\t\"stocks-stocks-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    loadChildren: './stocks/stocks.module#StocksModule'\r\n  },\r\n  {\r\n    path: 'history/:stock',\r\n    loadChildren: './history/history.module#HistoryModule',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \".header{\\r\\n  position: fixed;\\r\\n  top:0px;\\r\\n  z-index: 100;\\r\\n}\\r\\n\\r\\n.main-container{\\r\\n  margin: 30px;\\r\\n}\\r\\n\\r\\n.desc{\\r\\n  margin-top:64px;\\r\\n}\\r\\n\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<mat-toolbar color=\\\"primary\\\" class=\\\"header mat-elevation-z5\\\">\\n  <div style=\\\"padding-top: 10px;\\\"><mat-icon>dialpad</mat-icon></div><span> Brain Wave</span>\\n</mat-toolbar>\\n<mat-toolbar color=\\\"primary\\\" class=\\\"desc\\\">\\n    <mat-toolbar-row>\\n        <span class=\\\"mat-body\\\">Fullstack app to display list of archived stock.</span>\\n    </mat-toolbar-row>\\n    <mat-toolbar-row class=\\\"mat-body\\\">\\n        <span>On the home page you can check a list of top performing stock and below it remaining stock, Use the text box to search for search for stocks</span>\\n    </mat-toolbar-row>\\n    <mat-toolbar-row class=\\\"mat-body\\\">\\n        <span>Click on the card to view stock history.</span>\\n    </mat-toolbar-row>\\n</mat-toolbar>\\n<div class=\\\"main-container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'brainwave';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\n\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatButtonModule, MatToolbarModule, MatMenuModule, MatIconModule} from '@angular/material';\n\nimport { HttpService } from './service/http.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatIconModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {ajax, AjaxResponse} from 'rxjs/ajax';\nimport {map} from 'rxjs/operators';\nimport { Subscription, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  httpGetLatest (url: string): Observable <AjaxResponse> {\n    const result = ajax(url).pipe(map((value: AjaxResponse) => {\n      value.response = value.response.map((val: any) => {\n        val.date = new Date(val.date);\n        return val;\n      });\n      return value.response;\n    }));\n\n    return result;\n  }\n  httpGetHistory (stock: string): Observable <AjaxResponse> {\n    const result = ajax(`./stocks/${stock}`).pipe(map((value: AjaxResponse) => {\n      value.response = value.response.map((val: any) => {\n        val.date = new Date(val.date);\n        return val;\n      });\n      return value.response;\n    }));\n    return result;\n  }\n  constructor() { }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}